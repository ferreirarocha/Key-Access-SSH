#!/bin/bash
# Name: acesso.ssh
# Author: Marcos Ferreira da Rocha
# E-Mail: marcos.fr.rocha@gmail.com

# Este script envia automatiza a geração e inserção de chave  pública em um servidor ssh.
# Para ficar mais comodo envie esse arquivo para o diretório /usr/bin
# Uso 
# acesso --option  vyos vyos@192.168.1.1


# Criando arquivos de funcao
	
	DIR=~/.local/share/acesso/
	if [ ! -f $DIR ]; then
           mkdir -p ~/.local/share/acesso
	fi
	
	FILE=~/.local/share/acesso/access_functions
	if [ ! -f $FILE ]; then
           touch ~/.local/share/acesso/access_functions
	fi

# Funcao

	if [[ "$SHELL" == *"bash"* ]] ;then
		funcao=$(grep -q 'source ~/.local/share/acesso/access_functions' ~/.bashrc && echo $?)
				if [ "$funcao" != "0" ]; then
					echo "source ~/.local/share/acesso/access_functions" >> ~/.bashrc
				fi

	elif [[ "$SHELL" == *"zsh"* ]] ;then
		funcao=$(grep -q 'source ~/.local/share/acesso/access_functions' ~/.zshrc && echo $?)
	            if [ "$funcao" != "0" ]; then
	            	echo "source ~/.local/share/acesso/access_functions" >> ~/.zshrc
				fi
    
    else
    	echo "sem shell"
    fi
 
 ajuda(){
  	cat <<EOF
	
	Todas as opções;
	
	-a --add 		Adiciona um nova conexão
	-c --config		Lista os arquivos de configuração e diretórios do script
	   --clear		Limpar   registro de conexões
	-e --edit		edita o arquivo de  conexões
	-h --help		Exibe o menu de ajuda
	-i --import		importar registro de conexões
	-l --list		Lista as conexões registradas
	-n --new-key		Cria um novo par de chaves
	-s --save-key		Salva o par de chaves utilizadas  pelo script  na home do usuário corrente
	-x --export		Exportar registro de conexões
	

EOF
}
ajuda-registro(){
	cat <<EOF
	
	Para registrar uma nova  conexão siga o exemplo;

	acesso -a servidor user@192.168.1.1
EOF
}
ajuda-export(){
	cat <<EOF
	Para exportar todos os registros de conexões siga o exemplo;
	
	acesso -e nome-do-arquivo
	acesso --export nome-do-arquivo

EOF
}
ajuda-import(){
        cat <<EOF

	Para importar todos os registros de conexões siga o exemplo;

	acesso -i nome-do-arquivo
	acesso --import nome-do-arquivo

EOF
}

config(){
	cat <<EOF

	Abaixo é apresentado o conjuto de  diretórios e arquivos que compõem a aplicação

	access_functions	Armazena as conexões registradas
	~/.local/share/acesso/	Armazena os arquivos de configuração da aplicação
	~/.bashrc		Exportar o arquivo access_functions para o shell corrent
	~/.zshrc		Exportar o arquivo access_functions para o shell corrente
	~/.ssh/			Diretório utilizado para  acessar o par de chaves
	/usr/bin/		Diretório com  script executável

EOF
}

RETVAL=0

	case "$1" in
   	"")
		ajuda

	RETVAL=1
		;;
	--new-key|n|-n)

		ssh-keygen
	;;
	--add|-a|a)
	if [[ ! -z "$2"  &&  ! -z "$3" ]]; then 

	# Criando o par de chaves
#		SSH
		chave=~/.ssh/key-acesso.rsa
		if [ ! -f $chave ]; then
			ssh-keygen -t rsa -N '' -f "$chave"
		fi

#		Enviando a chave pública para o servidor
		ssh-copy-id  -i "$chave".pub "$3"

#		Adicionado a função no arquivo .bashrc para facilitar a  autenticaçaõ, o exec $SHELL recarrega a sessaõ para utilizar a nova  função.

		echo "$2() { ssh -i "$chave" "$3"; }" >>  ~/.local/share/acesso/access_functions ; exec $SHELL
	else
		ajuda-registro
		ajuda
	fi
	;;
	--list|-l)
		echo ""
		cat ~/.local/share/acesso/access_functions | sed -e 's/()/  |  /'| sed -e 's/{//' | sed -e 's/}//' | sed -e 's/;/ /'  | sed -e 's/   //'
		echo "" 
	;;
	--edit|-e)
		nano ~/.local/share/acesso/access_functions

	;;
        --export|-x|x)
	if [[ ! -z "$2"  ]]; then
		cp  -v ~/.local/share/acesso/access_functions  ~/"$2".bkp
	else
		ajuda-export
		ajuda
	fi
	;;
	--import|-i|i)
	if [[ ! -z "$2" ]]; then
		cp  -v "$2"  -Rv ~/.local/share/acesso/access_functions 
		exec $SHELL
	else
		ajuda-import
		ajuda
	fi
	;;
	--save-key|-s)
	cp -v ~/.ssh/key-acesso.rsa      ~/key-acesso.rsa.bkp
	cp -v ~/.ssh/key-acesso.rsa.pub  ~/key-acesso.rsa.pub.bkp
	;;
	--clear)
	echo > ~/.local/share/acesso/access_functions
	exec $SHELL
	;;
	--conf|-c)
		config
	;;
	--help|-h)
		ajuda	
	esac

exit $RETVAL
